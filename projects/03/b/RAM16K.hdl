// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/02/b/RAM16K.hdl
/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // set select/load value for each RAM4K
    DMux8Way(a=aa, b=bb, c=cc, d=dd, e=ee, f=ff, g=gg, h=hh, in=load, sel=address[0..2]);

    RAM4K(in=in, load=aa, address=address[2..13], out=rama);
    RAM4K(in=in, load=bb, address=address[2..13], out=ramb);
    RAM4K(in=in, load=cc, address=address[2..13], out=ramc);
    RAM4K(in=in, load=dd, address=address[2..13], out=ramd);
    RAM4K(in=in, load=ee, address=address[2..13], out=rame);
    RAM4K(in=in, load=ff, address=address[2..13], out=ramf);
    RAM4K(in=in, load=gg, address=address[2..13], out=ramg);
    RAM4K(in=in, load=hh, address=address[2..13], out=ramh);

    // set output 
    Mux8Way16(a=rama,b=ramb, c=ramc, d=ramd, e=rame, f=ramf, g=ramg, h=ramh, sel=address[0..2], out=out);

}
